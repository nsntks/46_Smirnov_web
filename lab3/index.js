function startGame() {
    const questions = [
        {
            question: "–ö–æ–≥–¥–∞ —Å–æ—Å—Ç–æ—è–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç–∏–µ –ú–ü–£, –Ω–∞–∑–≤–∞–Ω–Ω–æ–≥–æ –≤ —á–µ—Å—Ç—å 25-–ª–µ—Ç–∏—è —Ü–∞—Ä—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∏–º–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ II?",
            options: ["22 —Ñ–µ–≤—Ä–∞–ª—è 1903 –≥–æ–¥–∞", "24 —Ñ–µ–≤—Ä–∞–ª—è 1903 –≥–æ–¥–∞", "27 —Ñ–µ–≤—Ä–∞–ª—è 1903 –≥–æ–¥–∞", "25 —Ñ–µ–≤—Ä–∞–ª—è 1904 –≥–æ–¥–∞"],
            correctAnswer: "24 —Ñ–µ–≤—Ä–∞–ª—è 1903 –≥–æ–¥–∞"
        },
        {
            question: "–ö–æ–≥–¥–∞ –ú–•–¢–ò –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª–∏ –≤ –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ö–∏–º–∏–∫–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–º–µ–Ω–∏ –î. –ò. –ú–µ–Ω–¥–µ–ª–µ–µ–≤–∞?",
            options: ["–≤ 1991 –≥–æ–¥—É", "–≤ 1990 –≥–æ–¥—É", "–≤ 1992 –≥–æ–¥—É", "–≤ 1993 –≥–æ–¥—É"],
            correctAnswer: "–≤ 1992 –≥–æ–¥—É"
        },
        {
            question: "–ö–æ–≥–¥–∞ –±—ã–ª–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∞ –∫–∞—Ñ–µ–¥—Ä–∞ –ò–ö–¢ –≤ –†–•–¢–£ –∏–º. –î.–ò. –ú–µ–Ω–¥–µ–ª–µ–µ–≤–∞?",
            options: ["–≤ 2001 –≥–æ–¥—É", "–≤ 2000 –≥–æ–¥—É", "–≤ 2002 –≥–æ–¥—É", "—Ö–∑"],
            correctAnswer: "–≤ 2001 –≥–æ–¥—É"
        }
    ];

    let score = 0;

    alert("–ù–∞—á–∏–Ω–∞–µ–º –≤–∏–∫—Ç–æ—Ä–∏–Ω—É!");

    for (let i = 0; i < questions.length; i++) {
        const currentQuestion = questions[i];
        let userAnswer;
        const optionsString = currentQuestion.options.map((option, index) => `${index + 1}. ${option}`).join("\n");

        while (true) {
            userAnswer = prompt(`${currentQuestion.question}\n\n–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:\n${optionsString}`);
            if (userAnswer === null) {
                // –æ—Ç–º–µ–Ω–∞
                const confirmExit = confirm("–£–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ö–æ—á–µ—à—å –≤—ã–π—Ç–∏? –¢–æ—á–Ω–æ?");
                if (confirmExit) {
                    alert(`–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –¢–≤–æ–π —Å—á—ë—Ç: ${score} –∏–∑ ${questions.length}`);
                    return;
                } else {
                    continue;
                }
            }
            const answerNumber = parseInt(userAnswer);

            if (isNaN(answerNumber) || answerNumber < 1 || answerNumber > currentQuestion.options.length) {
                alert("–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞!");
                continue;
            }

            const selectedOption = currentQuestion.options[answerNumber - 1];

            // –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏
            if (selectedOption === currentQuestion.correctAnswer) {
                alert("–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üéâ");
                score++;
            } else {
                alert(`–ü—Ä–æ–≤–∞–ª. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${currentQuestion.correctAnswer}`);
            }
            break;
        }
    }

    // –∏—Ç–æ–≥
    alert(`–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–≤–æ–π —Å—á—ë—Ç: ${score} –∏–∑ ${questions.length}`);

    const playAgain = confirm("–î–æ–∫–∞–∂–∏ —Å–µ–±–µ, —á—Ç–æ –≤—Å—ë –∑–Ω–∞–µ—à—å! –ù–∞–∂–º–∏—Ç–µ '–û–ö' –¥–ª—è –ø–æ–≤—Ç–æ—Ä–∞ –∏–ª–∏ '–û—Ç–º–µ–Ω–∞' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.");
    if (playAgain) {
        startGame();
    } else {
        alert("–ß–∞–æ!");
    }
}

